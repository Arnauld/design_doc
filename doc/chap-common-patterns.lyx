#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\end_header

\begin_body

\begin_layout Section
Common patterns
\end_layout

\begin_layout Standard
This section describes common patterns that will be used afterward in the
 document.
\end_layout

\begin_layout Subsection
Entity-Attribute-Value and Type Object
\end_layout

\begin_layout Standard
Entity-Attribute-Value is a common pattern that allows dynamic and extensible
 definition of entity.
 It allows to design the entities in such a way that attributes (properties
 or parameters) could be added dynamically without the need to change the
 database schema.
\end_layout

\begin_layout Standard
Basically the roles could be summarized:
\end_layout

\begin_layout Itemize
The entity: the item being described.
 
\end_layout

\begin_layout Itemize
The attribute or parameter or properties: corresponds to the 
\begin_inset Quotes eld
\end_inset

custom
\begin_inset Quotes erd
\end_inset

 fields in ES.
 The attribute descriptor would contain the following columns: an attribute
 ID, attribute name, description, data type, and columns assisting input
 validation, e.g., maximum string length and regular expression, set of permissibl
e values, etc.
 
\end_layout

\begin_layout Itemize
The value of the attribute for an entity.
\end_layout

\begin_layout Standard
From TypeObject Pattern:
\end_layout

\begin_layout Quotation
Decouple instances from their classes so that those classes can be implemented
 as instances of a class.
 Type Object allows new "classes" to be created dynamically at runtime
\end_layout

\begin_layout Standard
Similarly new entity descriptor could be created or modified at runtime.
\end_layout

\begin_layout Standard
The mapping to OO class is straigthforward: 
\end_layout

\begin_layout Itemize
an entity is described by an entity descriptor: an instance is described
 by its class
\end_layout

\begin_layout Itemize
attribute: class's fields
\end_layout

\begin_layout Itemize
the attribute value of the entity: the value of the corresponding field
 instance
\end_layout

\begin_layout Standard
Thus one will have the following diagram:
\end_layout

\begin_layout Standard
Readings
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Wikipedia: EAV"
target "http://en.wikipedia.org/wiki/Entity-attribute-value_model"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "EAV/CR Data Modelling"
target "http://ycmi.med.yale.edu/nadkarni/eav_cr_frame.htm"

\end_inset


\end_layout

\begin_layout Itemize
The Type Object Pattern - Ralph Johnson and Bobby Woolf
\end_layout

\end_body
\end_document
